{"version":3,"sources":["components/DashBoard.js","components/PetForm.js","components/EditPet.js","components/ViewPet.js","App.js","serviceWorker.js","index.js"],"names":["DashBoard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","axios","get","then","res","setState","pets","data","catch","err","console","log","state","react_default","a","createElement","map","pet","key","_id","name","type","react_router_dom","to","Component","PetForm","changeName","e","objectSpread","target","value","changeType","changeDescription","description","changeSkill1","skill1","changeSkill2","skill2","changeSkill3","skill3","create","preventDefault","post","errors","history","push","likes","onSubmit","onChange","message","EditPet","concat","match","params","update","put","ViewPet","likePet","l","isliked","delete","onClick","disabled","id","App","className","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uSA4DeA,cAvDX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAMVQ,kBAAoB,WAChBC,IAAMC,IAAI,SACTC,KAAK,SAAAC,GACFX,EAAKY,SAAS,CAACC,KAAMF,EAAIG,KAAKD,SAC/BE,MAAM,SAAAC,GACLC,QAAQC,IAAIF,MAVhBhB,EAAKmB,MAAQ,CACTN,KAAK,IAHMb,wEAkBnB,OACEoB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,gBACIF,EAAAC,EAAAC,cAAA,oDACEF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,uBAGRF,EAAAC,EAAAC,cAAA,aAEQnB,KAAKgB,MAAMN,KAAKU,IAAI,SAAAC,GAAG,OACnBJ,EAAAC,EAAAC,cAAA,MAAIG,IAAKD,EAAIE,KACTN,EAAAC,EAAAC,cAAA,UAAKE,EAAIG,MACTP,EAAAC,EAAAC,cAAA,UAAKE,EAAII,MACTR,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAI,QAAUN,EAAIE,KAAKN,EAAAC,EAAAC,cAAA,0BAC7BF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAI,QAASN,EAAIE,IAAI,SAC3BN,EAAAC,EAAAC,cAAA,sCAxCZS,oBCgITC,cA5HX,SAAAA,EAAYjC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6B,IACfhC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+B,GAAA1B,KAAAH,KAAMJ,KAiBVkC,WAAa,SAACC,GACVlC,EAAKY,SAAS,CAACY,IAAIvB,OAAAkC,EAAA,EAAAlC,CAAA,GAAKD,EAAKmB,MAAMK,IAAjB,CAAsBG,KAAMO,EAAEE,OAAOC,WAnBxCrC,EAqBnBsC,WAAa,SAACJ,GACVlC,EAAKY,SAAS,CAACY,IAAIvB,OAAAkC,EAAA,EAAAlC,CAAA,GAAKD,EAAKmB,MAAMK,IAAjB,CAAsBI,KAAMM,EAAEE,OAAOC,WAtBxCrC,EAwBnBuC,kBAAoB,SAACL,GACjBlC,EAAKY,SAAS,CAACY,IAAIvB,OAAAkC,EAAA,EAAAlC,CAAA,GAAKD,EAAKmB,MAAMK,IAAjB,CAAsBgB,YAAaN,EAAEE,OAAOC,WAzB/CrC,EA2BnByC,aAAe,SAACP,GACZlC,EAAKY,SAAS,CAACY,IAAIvB,OAAAkC,EAAA,EAAAlC,CAAA,GAAKD,EAAKmB,MAAMK,IAAjB,CAAsBkB,OAAQR,EAAEE,OAAOC,WA5B1CrC,EA8BnB2C,aAAe,SAACT,GACZlC,EAAKY,SAAS,CAACY,IAAIvB,OAAAkC,EAAA,EAAAlC,CAAA,GAAKD,EAAKmB,MAAMK,IAAjB,CAAsBoB,OAAQV,EAAEE,OAAOC,WA/B1CrC,EAiCnB6C,aAAe,SAACX,GACZlC,EAAKY,SAAS,CAACY,IAAIvB,OAAAkC,EAAA,EAAAlC,CAAA,GAAKD,EAAKmB,MAAMK,IAAjB,CAAsBsB,OAAQZ,EAAEE,OAAOC,WAlC1CrC,EAsCnB+C,OAAS,SAACb,GACNA,EAAEc,iBACFxC,IAAMyC,KAAK,QAASjD,EAAKmB,MAAMK,KAC9Bd,KAAK,SAAAC,GACFM,QAAQC,IAAIP,GACTA,EAAIG,KAAKoC,OACRlD,EAAKY,SAAS,CAACsC,OAAQvC,EAAIG,KAAKoC,OAAOA,SAGvClD,EAAKD,MAAMoD,QAAQC,KAAK,OAE7BrC,MAAM,SAAAC,GACLC,QAAQC,IAAIF,MAhDhBhB,EAAKmB,MAAQ,CACTK,IAAK,CACDG,KAAM,GACNC,KAAM,GACNY,YAAa,GACbE,OAAQ,GACRE,OAAQ,GACRE,OAAQ,GACRO,MAAO,GAEXH,OAAO,IAZIlD,wEAwDnB,OACEoB,EAAAC,EAAAC,cAAA,gBACIF,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAA,QAAMgC,SAAYnD,KAAK4C,QACrB3B,EAAAC,EAAAC,cAAA,2BAEIF,EAAAC,EAAAC,cAAA,SAAOM,KAAM,OAAO2B,SAAWpD,KAAK8B,aAE/B9B,KAAKgB,MAAM+B,OAAOvB,KACvBP,EAAAC,EAAAC,cAAA,YAAOnB,KAAKgB,MAAM+B,OAAOvB,KAAK6B,SAC9BpC,EAAAC,EAAAC,cAAA,cAGJF,EAAAC,EAAAC,cAAA,2BAEIF,EAAAC,EAAAC,cAAA,SAAOM,KAAM,OAAO2B,SAAWpD,KAAKmC,aAE/BnC,KAAKgB,MAAM+B,OAAOtB,KACvBR,EAAAC,EAAAC,cAAA,YAAOnB,KAAKgB,MAAM+B,OAAOtB,KAAK4B,SAC9BpC,EAAAC,EAAAC,cAAA,cAGJF,EAAAC,EAAAC,cAAA,kCAEIF,EAAAC,EAAAC,cAAA,SAAOM,KAAM,OAAO2B,SAAWpD,KAAKoC,oBAE/BpC,KAAKgB,MAAM+B,OAAOV,YACvBpB,EAAAC,EAAAC,cAAA,qBAAenB,KAAKgB,MAAM+B,OAAOV,YAAYgB,SAC7CpC,EAAAC,EAAAC,cAAA,cAGJF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,6BAEIF,EAAAC,EAAAC,cAAA,SAAOM,KAAM,OAAO2B,SAAWpD,KAAKsC,eAE/BtC,KAAKgB,MAAM+B,OAAOR,OACvBtB,EAAAC,EAAAC,cAAA,oBAAcnB,KAAKgB,MAAM+B,OAAOR,OAAOc,SACvCpC,EAAAC,EAAAC,cAAA,cAGJF,EAAAC,EAAAC,cAAA,6BAEIF,EAAAC,EAAAC,cAAA,SAAOM,KAAM,OAAO2B,SAAWpD,KAAKwC,eAE/BxC,KAAKgB,MAAM+B,OAAON,OACvBxB,EAAAC,EAAAC,cAAA,qBAAenB,KAAKgB,MAAM+B,OAAON,OAAOY,SACxCpC,EAAAC,EAAAC,cAAA,cAGJF,EAAAC,EAAAC,cAAA,6BAEIF,EAAAC,EAAAC,cAAA,SAAOM,KAAM,OAAO2B,SAAWpD,KAAK0C,eAE/B1C,KAAKgB,MAAM+B,OAAOJ,OACvB1B,EAAAC,EAAAC,cAAA,YAAOnB,KAAKgB,MAAM+B,OAAOJ,OAAOU,SAChCpC,EAAAC,EAAAC,cAAA,cAGJF,EAAAC,EAAAC,cAAA,UAAQM,KAAK,UAAb,WAxDF,aA0DER,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAG,KAAIV,EAAAC,EAAAC,cAAA,iCAxHHS,aCuJP0B,cAnJX,SAAAA,EAAY1D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsD,IACfzD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwD,GAAAnD,KAAAH,KAAMJ,KAiBVQ,kBAAoB,WAChBC,IAAMC,IAAN,SAAAiD,OAAmB1D,EAAKD,MAAM4D,MAAMC,OAAOlC,MAC1ChB,KAAK,SAAAC,GACFX,EAAKY,SAAS,CAACY,IAAKb,EAAIG,KAAKU,QAC9BT,MAAM,SAAAC,GACLC,QAAQC,IAAIF,MAvBDhB,EA4BnBiC,WAAa,SAACC,GACVlC,EAAKY,SAAS,CAACY,IAAIvB,OAAAkC,EAAA,EAAAlC,CAAA,GAAKD,EAAKmB,MAAMK,IAAjB,CAAsBG,KAAMO,EAAEE,OAAOC,WA7BxCrC,EA+BnBsC,WAAa,SAACJ,GACVlC,EAAKY,SAAS,CAACY,IAAIvB,OAAAkC,EAAA,EAAAlC,CAAA,GAAKD,EAAKmB,MAAMK,IAAjB,CAAsBI,KAAMM,EAAEE,OAAOC,WAhCxCrC,EAkCnBuC,kBAAoB,SAACL,GACjBlC,EAAKY,SAAS,CAACY,IAAIvB,OAAAkC,EAAA,EAAAlC,CAAA,GAAKD,EAAKmB,MAAMK,IAAjB,CAAsBgB,YAAaN,EAAEE,OAAOC,WAnC/CrC,EAqCnByC,aAAe,SAACP,GACZlC,EAAKY,SAAS,CAACY,IAAIvB,OAAAkC,EAAA,EAAAlC,CAAA,GAAKD,EAAKmB,MAAMK,IAAjB,CAAsBkB,OAAQR,EAAEE,OAAOC,WAtC1CrC,EAwCnB2C,aAAe,SAACT,GACZlC,EAAKY,SAAS,CAACY,IAAIvB,OAAAkC,EAAA,EAAAlC,CAAA,GAAKD,EAAKmB,MAAMK,IAAjB,CAAsBoB,OAAQV,EAAEE,OAAOC,WAzC1CrC,EA2CnB6C,aAAe,SAACX,GACZlC,EAAKY,SAAS,CAACY,IAAIvB,OAAAkC,EAAA,EAAAlC,CAAA,GAAKD,EAAKmB,MAAMK,IAAjB,CAAsBsB,OAAQZ,EAAEE,OAAOC,WA5C1CrC,EAgDnB6D,OAAS,SAAC3B,GACNA,EAAEc,iBACFxC,IAAMsD,IAAN,SAAAJ,OAAmB1D,EAAKD,MAAM4D,MAAMC,OAAOlC,KAAO1B,EAAKmB,MAAMK,KAC5Dd,KAAK,SAAAC,GACFM,QAAQC,IAAIP,GACTA,EAAIG,KAAKoC,OACRlD,EAAKY,SAAS,CAACsC,OAAQvC,EAAIG,KAAKoC,OAAOA,SAGvClD,EAAKD,MAAMoD,QAAQC,KAAK,OAE7BrC,MAAM,SAAAC,GACLC,QAAQC,IAAIF,MA1DhBhB,EAAKmB,MAAQ,CACTK,IAAK,CACDG,KAAM,GACNC,KAAM,GACNY,YAAa,GACbE,OAAQ,GACRE,OAAQ,GACRE,OAAQ,GACRO,MAAO,GAEXH,OAAO,IAZIlD,wEAkEnB,OACEoB,EAAAC,EAAAC,cAAA,gBACIF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,QAAMgC,SAAYnD,KAAK0D,QACrBzC,EAAAC,EAAAC,cAAA,2BAEIF,EAAAC,EAAAC,cAAA,SAAOM,KAAM,OACbS,MAAOlC,KAAKgB,MAAMK,IAAIG,KACtB4B,SAAWpD,KAAK8B,aAEX9B,KAAKgB,MAAM+B,OAAOvB,KACvBP,EAAAC,EAAAC,cAAA,YAAOnB,KAAKgB,MAAM+B,OAAOvB,KAAK6B,SAC9BpC,EAAAC,EAAAC,cAAA,cAGJF,EAAAC,EAAAC,cAAA,2BAEIF,EAAAC,EAAAC,cAAA,SAAOM,KAAM,OACbS,MAAOlC,KAAKgB,MAAMK,IAAII,KACtB2B,SAAWpD,KAAKmC,aAEXnC,KAAKgB,MAAM+B,OAAOtB,KACvBR,EAAAC,EAAAC,cAAA,YAAOnB,KAAKgB,MAAM+B,OAAOtB,KAAK4B,SAC9BpC,EAAAC,EAAAC,cAAA,cAGJF,EAAAC,EAAAC,cAAA,kCAEIF,EAAAC,EAAAC,cAAA,SAAOM,KAAM,OACbS,MAAOlC,KAAKgB,MAAMK,IAAIgB,YACtBe,SAAWpD,KAAKoC,oBAEXpC,KAAKgB,MAAM+B,OAAOV,YACvBpB,EAAAC,EAAAC,cAAA,qBAAenB,KAAKgB,MAAM+B,OAAOV,YAAYgB,SAC7CpC,EAAAC,EAAAC,cAAA,cAGJF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,6BAEIF,EAAAC,EAAAC,cAAA,SAAOM,KAAM,OACZS,MAAOlC,KAAKgB,MAAMK,IAAIkB,OACtBa,SAAWpD,KAAKsC,eAEZtC,KAAKgB,MAAM+B,OAAOR,OACvBtB,EAAAC,EAAAC,cAAA,oBAAcnB,KAAKgB,MAAM+B,OAAOR,OAAOc,SACvCpC,EAAAC,EAAAC,cAAA,cAGJF,EAAAC,EAAAC,cAAA,6BAEIF,EAAAC,EAAAC,cAAA,SAAOM,KAAM,OACbS,MAAOlC,KAAKgB,MAAMK,IAAIoB,OACtBW,SAAWpD,KAAKwC,eAEXxC,KAAKgB,MAAM+B,OAAON,OACvBxB,EAAAC,EAAAC,cAAA,qBAAenB,KAAKgB,MAAM+B,OAAON,OAAOY,SACxCpC,EAAAC,EAAAC,cAAA,cAGJF,EAAAC,EAAAC,cAAA,6BAEIF,EAAAC,EAAAC,cAAA,SAAOM,KAAM,OACbS,MAAOlC,KAAKgB,MAAMK,IAAIsB,OACtBS,SAAWpD,KAAK0C,eAEX1C,KAAKgB,MAAM+B,OAAOJ,OACvB1B,EAAAC,EAAAC,cAAA,YAAOnB,KAAKgB,MAAM+B,OAAOJ,OAAOU,SAChCpC,EAAAC,EAAAC,cAAA,cAGJF,EAAAC,EAAAC,cAAA,UAAQM,KAAK,UAAb,mBApEF,aAsEER,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAG,KAAIV,EAAAC,EAAAC,cAAA,iCA9IHS,aCwGPgC,cAzGX,SAAAA,EAAYhE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4D,IACf/D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8D,GAAAzD,KAAAH,KAAMJ,KAgBVQ,kBAAoB,WAChBC,IAAMC,IAAN,SAAAiD,OAAmB1D,EAAKD,MAAM4D,MAAMC,OAAOlC,MAC1ChB,KAAK,SAAAC,GACFX,EAAKY,SAAS,CAACY,IAAKb,EAAIG,KAAKU,QAC9BT,MAAM,SAAAC,GACLC,QAAQC,IAAIF,MAtBDhB,EA0BnBgE,QAAU,SAAC9B,GACPA,EAAEc,iBACF,IAAIiB,EAAIjE,EAAKmB,MAAMK,IAAI6B,MACvBY,GAAG,EACHjE,EAAKY,SAAS,CAACY,IAAIvB,OAAAkC,EAAA,EAAAlC,CAAA,GAAKD,EAAKmB,MAAMK,IAAjB,CAAsB6B,MAAOY,KAAK,WAChDzD,IAAMsD,IAAN,SAAAJ,OAAmB1D,EAAKD,MAAM4D,MAAMC,OAAOlC,KAAO1B,EAAKmB,MAAMK,KAC5Dd,KAAK,SAAAC,GACNM,QAAQC,IAAIP,GACTA,EAAIG,KAAKoC,QACRlD,EAAKY,SAAS,CAACsC,OAAQvC,EAAIG,KAAKoC,OAAOA,WAE5CnC,MAAM,SAAAC,GACLC,QAAQC,IAAIF,OAGhBhB,EAAKY,SAAS,CAACsD,SAAU,KAzCVlE,EA4CnBmE,OAAS,SAACjC,GACN1B,IAAM2D,OAAN,SAAAT,OAAsB1D,EAAKD,MAAM4D,MAAMC,OAAOlC,MAC7ChB,KAAK,SAAAC,GACFX,EAAKD,MAAMoD,QAAQC,KAAK,OACzBrC,MAAM,SAAAC,GACLC,QAAQC,IAAIF,MA/ChBhB,EAAKmB,MAAQ,CACTK,IAAK,CACDG,KAAM,GACNC,KAAM,GACNY,YAAa,GACbE,OAAQ,GACRE,OAAQ,GACRE,OAAQ,GACRO,MAAO,GAEXH,OAAO,GACPgB,SAAS,GAbElE,wEAuDnB,OACEoB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,+BAAuBnB,KAAKgB,MAAMK,IAAIG,MAEpCP,EAAAC,EAAAC,cAAA,2BAEIF,EAAAC,EAAAC,cAAA,oBAAcnB,KAAKgB,MAAMK,IAAIG,OAGjCP,EAAAC,EAAAC,cAAA,2BAEIF,EAAAC,EAAAC,cAAA,oBAAcnB,KAAKgB,MAAMK,IAAII,OAEjCR,EAAAC,EAAAC,cAAA,kCAEIF,EAAAC,EAAAC,cAAA,oBAAcnB,KAAKgB,MAAMK,IAAIgB,cAEjCpB,EAAAC,EAAAC,cAAA,mBAGSnB,KAAKgB,MAAMK,IAAIkB,OACpBtB,EAAAC,EAAAC,cAAA,oBAAcnB,KAAKgB,MAAMK,IAAIkB,OAAOtB,EAAAC,EAAAC,cAAA,YACpCF,EAAAC,EAAAC,cAAA,aAGKnB,KAAKgB,MAAMK,IAAIoB,OACpBxB,EAAAC,EAAAC,cAAA,oBAAcnB,KAAKgB,MAAMK,IAAIoB,OAAOxB,EAAAC,EAAAC,cAAA,YACpCF,EAAAC,EAAAC,cAAA,aAGKnB,KAAKgB,MAAMK,IAAIsB,OACpB1B,EAAAC,EAAAC,cAAA,oBAAcnB,KAAKgB,MAAMK,IAAIsB,OAAO1B,EAAAC,EAAAC,cAAA,YACpCF,EAAAC,EAAAC,cAAA,cAGJF,EAAAC,EAAAC,cAAA,4BAEIF,EAAAC,EAAAC,cAAA,oBAAcnB,KAAKgB,MAAMK,IAAI6B,QAEjCjC,EAAAC,EAAAC,cAAA,UAAQM,KAAK,SAASwC,QAASjE,KAAK6D,QAASK,SAAUlE,KAAKgB,MAAM+C,QAASI,GAAG,cAA9E,iBAtCF,YAuCElD,EAAAC,EAAAC,cAAA,UAAQ8C,QAASjE,KAAKgE,QAAtB,2BAjGUpC,aCuBPwC,MAlBf,WACE,OACEnD,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,OACbpD,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAG,KAAT,SACJV,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAG,aAAT,aAENV,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAY9E,IAClCsB,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAY5C,IACpCZ,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAOE,KAAK,iBAAiBC,UAAYnB,IACzCrC,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAYb,OCT9Bc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrB,MACvB,2DCZNsB,IAASC,OAAO9D,EAAAC,EAAAC,cAAC6D,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9E,KAAK,SAAA+E,GACjCA,EAAaC","file":"static/js/main.7d121a11.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass DashBoard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pets:[]\n        }\n    }\n\n    componentDidMount = () => {\n        axios.get(\"/pets\")\n        .then(res => {\n            this.setState({pets: res.data.pets})\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n\n  render() {\n    return (\n      <div>\n          <fieldset>\n              <legend>These pets are looking for a home!</legend>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.pets.map(pet => \n                                <tr key={pet._id}>\n                                    <td>{pet.name}</td>\n                                    <td>{pet.type}</td>\n                                    <td>\n                                    <Link to={\"/pet/\" + pet._id}><button>Details</button></Link>\n                                    <Link to={\"/pet/\"+ pet._id+\"/edit\"}>\n                                    <button>Edit</button></Link>\n                                    </td>\n                                </tr>)\n                        }\n                    </tbody>\n\n\n\n                </table>\n\n          </fieldset>\n      </div>\n    )\n  }\n}\n\nexport default DashBoard\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\n\nclass PetForm extends Component {\n\n//Constructor\n    constructor(props) {\n        super(props);\n        this.state = {\n            pet: {\n                name: \"\",\n                type: \"\",\n                description: \"\",\n                skill1: \"\",\n                skill2: \"\",\n                skill3: \"\",\n                likes: 0,\n            },\n            errors:{}\n        }\n    }\n\n\n//Changehandlers\n    changeName = (e) =>{\n        this.setState({pet: {...this.state.pet, name: e.target.value}});\n    }\n    changeType = (e) =>{\n        this.setState({pet: {...this.state.pet, type: e.target.value}});\n    }\n    changeDescription = (e) =>{\n        this.setState({pet: {...this.state.pet, description: e.target.value}});\n    }\n    changeSkill1 = (e) =>{\n        this.setState({pet: {...this.state.pet, skill1: e.target.value}});\n    }\n    changeSkill2 = (e) =>{\n        this.setState({pet: {...this.state.pet, skill2: e.target.value}});\n    }\n    changeSkill3 = (e) =>{\n        this.setState({pet: {...this.state.pet, skill3: e.target.value}});\n    }\n\n//Creating\n    create = (e) => {\n        e.preventDefault();\n        axios.post(\"/pets\", this.state.pet)\n        .then(res => {\n            console.log(res);\n            if(res.data.errors) {\n                this.setState({errors: res.data.errors.errors})\n            }\n            else{\n                this.props.history.push('/');\n            }\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n\n  render() {\n    return (\n      <fieldset>\n          <legend>Know of a pet needing a home?</legend>\n          <form onSubmit = {this.create}>\n            <p>\n                Name: &nbsp; &nbsp; \n                <input type= \"text\" onChange ={this.changeName}/>\n                {\n                    (this.state.errors.name) ?\n                <span>{this.state.errors.name.message}</span> :\n                <span></span>\n                }\n            </p>\n            <p>\n                Type: &nbsp; &nbsp; \n                <input type= \"text\" onChange ={this.changeType}/>\n                {\n                    (this.state.errors.type) ?\n                <span>{this.state.errors.type.message}</span> :\n                <span></span>\n                }\n            </p>\n            <p>\n                Description: &nbsp; &nbsp; \n                <input type= \"text\" onChange ={this.changeDescription}/>\n                {\n                    (this.state.errors.description) ?\n                <span> &nbsp; {this.state.errors.description.message}</span> :\n                <span></span>\n                }\n            </p>\n            <p>Skills:</p>\n            <p>\n                Skill1: &nbsp; &nbsp; \n                <input type= \"text\" onChange ={this.changeSkill1}/>\n                {\n                    (this.state.errors.skill1) ?\n                <span>&nbsp; {this.state.errors.skill1.message}</span> :\n                <span></span>\n                }\n            </p>\n            <p>\n                Skill2: &nbsp; &nbsp; \n                <input type= \"text\" onChange ={this.changeSkill2}/>\n                {\n                    (this.state.errors.skill2) ?\n                <span> &nbsp; {this.state.errors.skill2.message}</span> :\n                <span></span>\n                }\n            </p>\n            <p>\n                Skill3: &nbsp; &nbsp; \n                <input type= \"text\" onChange ={this.changeSkill3}/>\n                {\n                    (this.state.errors.skill3) ?\n                <span>{this.state.errors.skill3.message}</span> :\n                <span></span>\n                }\n            </p>\n            <button type=\"submit\">Add Pet</button> &nbsp;&nbsp;\n          </form>\n            <Link to=\"/\"><button>Cancel</button></Link>\n\n      </fieldset>\n    )\n  }\n}\n\nexport default PetForm\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\n\n\nclass EditPet extends Component {\n\n//Constructor\n    constructor(props) {\n        super(props);\n        this.state = {\n            pet: {\n                name: \"\",\n                type: \"\",\n                description: \"\",\n                skill1: \"\",\n                skill2: \"\",\n                skill3: \"\",\n                likes: 0,\n            },\n            errors:{}\n        }\n    }\n\n\n\n    componentDidMount = () => {\n        axios.get(`/pets/${this.props.match.params._id}`)\n        .then(res => {\n            this.setState({pet: res.data.pet});\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n//Changehandlers\n    changeName = (e) =>{\n        this.setState({pet: {...this.state.pet, name: e.target.value}});\n    }\n    changeType = (e) =>{\n        this.setState({pet: {...this.state.pet, type: e.target.value}});\n    }\n    changeDescription = (e) =>{\n        this.setState({pet: {...this.state.pet, description: e.target.value}});\n    }\n    changeSkill1 = (e) =>{\n        this.setState({pet: {...this.state.pet, skill1: e.target.value}});\n    }\n    changeSkill2 = (e) =>{\n        this.setState({pet: {...this.state.pet, skill2: e.target.value}});\n    }\n    changeSkill3 = (e) =>{\n        this.setState({pet: {...this.state.pet, skill3: e.target.value}});\n    }\n\n//Updating\n    update = (e) => {\n        e.preventDefault();\n        axios.put(`/pets/${this.props.match.params._id}`, this.state.pet)\n        .then(res => {\n            console.log(res);\n            if(res.data.errors) {\n                this.setState({errors: res.data.errors.errors});\n            }\n            else{\n                this.props.history.push('/');\n            }\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n\n  render() {\n    return (\n      <fieldset>\n          <legend>Edit this pet</legend>\n          <form onSubmit = {this.update}>\n            <p>\n                Name: &nbsp; &nbsp; \n                <input type= \"text\" \n                value={this.state.pet.name} \n                onChange ={this.changeName}/>\n                {\n                    (this.state.errors.name) ?\n                <span>{this.state.errors.name.message}</span> :\n                <span></span>\n                }\n            </p>\n            <p>\n                Type: &nbsp; &nbsp; \n                <input type= \"text\" \n                value={this.state.pet.type} \n                onChange ={this.changeType}/>\n                {\n                    (this.state.errors.type) ?\n                <span>{this.state.errors.type.message}</span> :\n                <span></span>\n                }\n            </p>\n            <p>\n                Description: &nbsp; &nbsp; \n                <input type= \"text\" \n                value={this.state.pet.description} \n                onChange ={this.changeDescription}/>\n                {\n                    (this.state.errors.description) ?\n                <span> &nbsp; {this.state.errors.description.message}</span> :\n                <span></span>\n                }\n            </p>\n            <p>Skills:</p>\n            <p>\n                Skill1: &nbsp; &nbsp; \n                <input type= \"text\"\n                 value={this.state.pet.skill1} \n                 onChange ={this.changeSkill1}/>\n                {\n                    (this.state.errors.skill1) ?\n                <span>&nbsp; {this.state.errors.skill1.message}</span> :\n                <span></span>\n                }\n            </p>\n            <p>\n                Skill2: &nbsp; &nbsp; \n                <input type= \"text\" \n                value={this.state.pet.skill2} \n                onChange ={this.changeSkill2}/>\n                {\n                    (this.state.errors.skill2) ?\n                <span> &nbsp; {this.state.errors.skill2.message}</span> :\n                <span></span>\n                }\n            </p>\n            <p>\n                Skill3: &nbsp; &nbsp; \n                <input type= \"text\" \n                value={this.state.pet.skill3} \n                onChange ={this.changeSkill3}/>\n                {\n                    (this.state.errors.skill3) ?\n                <span>{this.state.errors.skill3.message}</span> :\n                <span></span>\n                }\n            </p>\n            <button type=\"submit\">Update Pet Info</button> &nbsp;&nbsp;\n          </form>\n            <Link to=\"/\"><button>Cancel</button></Link>\n\n\n      </fieldset>\n    )\n  }\n}\n\nexport default EditPet\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass ViewPet extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pet: {\n                name: \"\",\n                type: \"\",\n                description: \"\",\n                skill1: \"\",\n                skill2: \"\",\n                skill3: \"\",\n                likes: 0,\n            },\n            errors:{},\n            isliked: false\n        }\n    }\n\n    componentDidMount = () => {\n        axios.get(`/pets/${this.props.match.params._id}`)\n        .then(res => {\n            this.setState({pet: res.data.pet});\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    likePet = (e) =>{\n        e.preventDefault();\n        let l = this.state.pet.likes;\n        l+=1;\n        this.setState({pet: {...this.state.pet, likes: l}}, () => {\n            axios.put(`/pets/${this.props.match.params._id}`, this.state.pet)\n            .then(res => {\n            console.log(res);\n            if(res.data.errors) {\n                this.setState({errors: res.data.errors.errors});\n            }\n        }).catch(err => {\n            console.log(err);\n        });\n        });\n        this.setState({isliked : true});\n    }\n\n    delete = (e) => {\n        axios.delete(`/pets/${this.props.match.params._id}`)\n        .then(res => {\n            this.props.history.push('/');\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n\n  render() {\n    return (\n      <div>\n          <fieldset>\n          <legend>Details about {this.state.pet.name}</legend>\n          \n            <p>\n                Name: &nbsp; &nbsp; \n                <span>&nbsp; {this.state.pet.name}</span> \n\n            </p>\n            <p>\n                Type: &nbsp; &nbsp; \n                <span>&nbsp; {this.state.pet.type}</span> \n            </p>\n            <p>\n                Description: &nbsp; &nbsp; \n                <span>&nbsp; {this.state.pet.description}</span> \n            </p>\n            <p>Skills:\n\n                {\n                    (this.state.pet.skill1) ?\n                <span>&nbsp; {this.state.pet.skill1}<br></br></span> :\n                <span></span>\n                }\n                {\n                    (this.state.pet.skill2) ?\n                <span>&nbsp; {this.state.pet.skill2}<br></br></span> :\n                <span></span>\n                }\n                {\n                    (this.state.pet.skill3) ?\n                <span>&nbsp; {this.state.pet.skill3}<br></br></span> :\n                <span></span>\n                }\n            </p>\n            <p>\n                Likes: &nbsp; &nbsp; \n                <span>&nbsp; {this.state.pet.likes}</span> \n            </p>\n            <button type=\"submit\" onClick={this.likePet} disabled={this.state.isliked} id=\"likebutton\">Like this pet</button> &nbsp;&nbsp;\n            <button onClick={this.delete}>Adopt this pet</button>\n\n\n      </fieldset>\n      </div>\n    )\n  }\n}\n\nexport default ViewPet\n","import React from 'react';\nimport './App.css';\nimport 'react-router';\nimport {Link, BrowserRouter as Router, Route} from 'react-router-dom';\nimport DashBoard from './components/DashBoard';\nimport PetForm from './components/PetForm';\nimport EditPet from './components/EditPet';\nimport ViewPet from './components/ViewPet';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Pet Shelter</h1>\n      <Router>\n        <ul>\n          <li><Link to=\"/\">Home</Link></li>\n          <li><Link to=\"/pets/new\">New Pet</Link></li>\n        </ul>\n        <Route exact path=\"/\" component= {DashBoard} />\n        <Route path=\"/pets/new\" component= {PetForm} />\n        <Route path=\"/pet/:_id/edit\" component= {EditPet} />\n        <Route exact path=\"/pet/:_id\" component= {ViewPet} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}